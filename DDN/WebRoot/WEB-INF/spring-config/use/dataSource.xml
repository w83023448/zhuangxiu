<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
       ">
       
       
    <!--数据源，采用apache数据库连接池 -->
	<bean id="dataSource" 
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${dataSource.driver}" />
		<property name="url" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
		<property name="initialSize" value="5"/>   
    	<property name="maxIdle" value="30"/>   
    	<property name="maxActive" value="50"/>   
    	<property name="maxWait" value="6000"/>   
    	<property name="testOnBorrow" value="true"/>   
    	<property name="testOnReturn" value="true"/>   
    	<property name="testWhileIdle" value="true"/>
    	<property name="logAbandoned" value="${dataSource.logAbandoned}"/>
    	<property name="removeAbandoned" value="${dataSource.removeAbandoned}"/>
    	<property name="removeAbandonedTimeout" value="${dataSource.removeAbandonedTimeout}"/>   
    	<property name="validationQuery" value="SELECT COUNT(*) FROM DUAL"/>   
    	<property name="minEvictableIdleTimeMillis" value="60000"/>   
    	<property name="timeBetweenEvictionRunsMillis" value="60000"/>   
	</bean>  
	
	
	
	
	
	<!-- hibernate 数据库连接配置   -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.hoo.company.ddn" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${dataSource.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>
	
	
	
	
	
	
	<!-- mybatis 数据库连接配置 -->
	
	 <!-- 配置sqlSessionFactory  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
         <!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件  -->
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="/WEB-INF/mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:com/hoo/company/ddn/**/dao/*Dao.xml" />
    </bean>
     <!-- 配置扫描器  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         <!-- 扫描cn.gilight.bussinesslogic这个包以及它的子包下的所有映射接口类  -->
        <property name="basePackage" value="com.hoo.company.ddn.**.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
	<bean id="sqlSession"   class="org.mybatis.spring.SqlSessionTemplate">   
          <constructor-arg index="0" ref="sqlSessionFactory" />   
    </bean> 
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	    <property name="dataSource" ref="dataSource"/>
	</bean>
	
	
	<bean id="daoSupport" class="cn.gilight.framework.dp.DaoSupportImpl">
		  <property name="sessionFactory" ref="sessionFactory"/>
		  <property name="idGenerator" ref="idGenerator"></property>
	</bean>
	<bean id="idGenerator" class="cn.gilight.framework.dp.id.UuidGenerator"/>
	
	<!-- 配置事务管理器 -->
    
    <bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="put*" propagation="REQUIRED" />
			<tx:method name="use*" propagation="REQUIRED" />
			<!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config expose-proxy="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut"
			expression="execution(* com.hoo.company.ddn..service.impl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>     
       




</beans>